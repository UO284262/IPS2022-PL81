DROP TABLE PRODUCTO_PEDIDO;
DROP TABLE PRODUCTO_ALMACEN;
DROP TABLE MONTAJE;
DROP TABLE PEDIDO;
DROP TABLE PROVEEDOR;
DROP TABLE VENTA_PRESUPUESTO;
DROP TABLE VENTA;
DROP TABLE PRODUCTO;
DROP TABLE ALMACEN;
DROP TABLE PRESUPUESTO;
DROP TABLE CLIENTE;
DROP TABLE VACACIONES;
DROP TABLE TRABAJADOR;



CREATE TABLE TRABAJADOR(
    ID_TRABAJADOR VARCHAR(255) NOT NULL PRIMARY KEY,
    NOMBRE VARCHAR(255) NOT NULL,
    APELLIDOS VARCHAR(255) NOT NULL,
    DNI VARCHAR(255) NOT NULL,
    CONTRASEÃ‘A VARCHAR(255) NOT NULL,
    HORA_INICIO VARCHAR(255) NOT NULL,
    HORA_FINAL VARCHAR(255) NOT NULL,
    TIPO VARCHAR(255) NOT NULL,
    TELEFONO DECIMAL(9,0) NOT NULL 
);


CREATE TABLE CLIENTE (
    DNI VARCHAR(255) NOT NULL PRIMARY KEY,
    CORREO VARCHAR(255) NOT NULL,
    NOMBRE VARCHAR(255) NOT NULL,
    APELLIDOS VARCHAR(255) NOT NULL
);


CREATE TABLE PRESUPUESTO (
    ID_PRESUPUESTO VARCHAR(255) NOT NULL PRIMARY KEY,
    DNI_CLIENTE VARCHAR(255),
    STATUS_PRESUPUESTO VARCHAR(255) NOT NULL,
    FECHA_LIMITE DATE NOT NULL,
    CONSTRAINT CK_PRESUPUESTO CHECK (STATUS_PRESUPUESTO IN ('ACEPTADO', 'PENDIENTE')),
    CONSTRAINT FK_CLIENTE FOREIGN KEY (DNI_CLIENTE) REFERENCES CLIENTE (DNI)
);



CREATE TABLE VENTA (
    ID_VENTA VARCHAR(255) NOT NULL PRIMARY KEY,
    ID_TRABAJADOR VARCHAR(255),
    ID_PRESUPUESTO VARCHAR(255),
    ESTADO VARCHAR(255),
    FECHA_VENTA DATETIME,
    ID_VENDEDOR VARCHAR(255),
    CONSTRAINT FK_TRABAJADOR FOREIGN KEY (ID_TRABAJADOR) REFERENCES TRABAJADOR (ID_TRABAJADOR),
    CONSTRAINT FK_PRESUPUESTO FOREIGN KEY (ID_PRESUPUESTO) REFERENCES PRESUPUESTO (ID_PRESUPUESTO),
    CONSTRAINT FK_PRESUPUESTO_VENDEDOR FOREIGN KEY (ID_VENDEDOR) REFERENCES TRABAJADOR (ID_TRABAJADOR)
);

CREATE TABLE VACACIONES (
    ID_TRABAJADOR VARCHAR(255) NOT NULL,
    INICIO DATETIME NOT NULL,
    FINAL DATETIME NOT NULL,
    CONSTRAINT FK_TRABAJADOR_VACACIONES FOREIGN KEY (ID_TRABAJADOR) REFERENCES TRABAJADOR (ID_TRABAJADOR)
);

CREATE TABLE ALMACEN(
    ID_ALMACEN VARCHAR(255),
    CONSTRAINT PK_ALMACEN PRIMARY KEY (ID_ALMACEN)
);


CREATE TABLE PRODUCTO(
    ID_PRODUCTO VARCHAR(255) NOT NULL PRIMARY KEY,
    ID_ALMACEN VARCHAR(255),
    NOMBRE_PRODUCTO VARCHAR(255) NOT NULL,
    TIPO_PRODUCTO VARCHAR(255) NOT NULL,
    PRECIO DECIMAL(5,2) NOT NULL,
    CONSTRAINT FK_PRODUCTO_ALMACEN FOREIGN KEY (ID_ALMACEN) REFERENCES ALMACEN (ID_ALMACEN)
);


CREATE TABLE MONTAJE(
    ID_PRESUPUESTO VARCHAR(255) NOT NULL,
    ID_PRODUCTO VARCHAR(255) NOT NULL,
    EN_CASA BOOLEAN NOT NULL,
    LLEVAR_CASA BOOLEAN NOT NULL,
    UNIDADES DECIMAL(3,0) NOT NULL,
    CONSTRAINT PK_ALMACEN_MONTAJE PRIMARY KEY (ID_PRESUPUESTO, ID_PRODUCTO),
    CONSTRAINT FK_MONTAJE_PRODUCTO FOREIGN KEY (ID_PRODUCTO) REFERENCES PRODUCTO (ID_PRODUCTO),
    CONSTRAINT FK_MONTAJE_PRESUPUESTO FOREIGN KEY (ID_PRESUPUESTO) REFERENCES PRESUPUESTO (ID_PRESUPUESTO)
);



CREATE TABLE PROVEEDOR(
    ID_PROVEEDOR VARCHAR(255) NOT NULL PRIMARY KEY
);



CREATE TABLE PEDIDO(
    ID_PEDIDO VARCHAR(255) NOT NULL PRIMARY KEY,
    ID_PROVEEDOR VARCHAR(255) NOT NULL,
    STATUS_PEDIDO VARCHAR(255) NOT NULL,
    URGENTE BOOLEAN NOT NULL,
    FECHA_PEDIDO DATETIME, 
    CONSTRAINT CK_PEDIDO CHECK(STATUS_PEDIDO IN ('SOLICITADO', 'RECIBIDO')),
    CONSTRAINT FK_PROVEEDOR FOREIGN KEY (ID_PROVEEDOR) REFERENCES PROVEEDOR (ID_PROVEEDOR)
);



CREATE TABLE PRODUCTO_PEDIDO(
    ID_PRODUCTO VARCHAR(255),
    ID_PEDIDO VARCHAR(255),
    UNIDADES DECIMAL(3,0) NOT NULL,
    CONSTRAINT PK_PRODUCTO_PEDIDO PRIMARY KEY (ID_PRODUCTO, ID_PEDIDO),
    CONSTRAINT FK_PRODUCTO_PEDIDO_PRODUCTO FOREIGN KEY (ID_PRODUCTO) REFERENCES PRODUCTO (ID_PRODUCTO),
    CONSTRAINT FK_PRODUCTO_PEDIDO_PEDIDO FOREIGN KEY (ID_PEDIDO) REFERENCES PEDIDO (ID_PEDIDO)
);

CREATE TABLE PRODUCTO_ALMACEN (
    ID_PRODUCTO VARCHAR(255),
    ID_ALMACEN VARCHAR(255),
    UNIDADES_ALMACENADAS DECIMAL(3,0) NOT NULL,
    CONSTRAINT PK_PRODUCTO_ALMACEN PRIMARY KEY (ID_PRODUCTO, ID_ALMACEN),
    CONSTRAINT FK_PRODUCTO_ALMACEN_PRODUCTO FOREIGN KEY (ID_PRODUCTO) REFERENCES PRODUCTO (ID_PRODUCTO),
    CONSTRAINT FK_PRODUCTO_ALMACEN_ALMACEN FOREIGN KEY (ID_ALMACEN) REFERENCES ALMACEN (ID_ALMACEN)
);